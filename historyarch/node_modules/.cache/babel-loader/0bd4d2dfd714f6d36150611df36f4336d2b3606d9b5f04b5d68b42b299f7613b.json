{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orang\\\\Documents\\\\archive\\\\History-Archieve\\\\historyarch\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Check if the user is logged in by checking if there's a token in localStorage\n  const isLoggedIn = !!localStorage.getItem('token');\n  const handleLogout = () => {\n    // Clear the token from localStorage\n    localStorage.removeItem('token');\n\n    // Redirect to the login page\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-blue-600 p-4 shadow-md flex justify-between items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"text-white text-xl font-bold\",\n      children: \"Monument Archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"bg-white text-blue-600 font-semibold py-2 px-4 rounded-lg shadow hover:bg-red-200 transition duration-300\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","Link","useNavigate","jsxDEV","_jsxDEV","Navbar","_s","navigate","isLoggedIn","localStorage","getItem","handleLogout","removeItem","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/orang/Documents/archive/History-Archieve/historyarch/src/components/Navbar.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  // Check if the user is logged in by checking if there's a token in localStorage\r\n  const isLoggedIn = !!localStorage.getItem('token');\r\n\r\n  const handleLogout = () => {\r\n    // Clear the token from localStorage\r\n    localStorage.removeItem('token');\r\n    \r\n    // Redirect to the login page\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-blue-600 p-4 shadow-md flex justify-between items-center\">\r\n      {/* App name */}\r\n      <Link to=\"/\" className=\"text-white text-xl font-bold\">\r\n        Monument Archive\r\n      </Link>\r\n\r\n      {/* Logout button appears only if user is logged in */}\r\n      {isLoggedIn && (\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"bg-white text-blue-600 font-semibold py-2 px-4 rounded-lg shadow hover:bg-red-200 transition duration-300\"\r\n        >\r\n          Logout\r\n        </button>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMM,UAAU,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACAL,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAKS,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAE1EV,OAAA,CAACH,IAAI;MAACc,EAAE,EAAC,GAAG;MAACF,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAEtD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAGNX,UAAU,iBACTJ,OAAA;MACEgB,OAAO,EAAET,YAAa;MACtBE,SAAS,EAAC,2GAA2G;MAAAC,QAAA,EACtH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CAhCID,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}